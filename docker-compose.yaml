services:
  angular-app:
    container_name: angular-app
    platform: linux/amd64
    build:
      context: ./angular-frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"  

  spring-boot-app:
    container_name: spring-boot-app
    platform: linux/amd64
    build:
      context: ./springboot-backend
      dockerfile: Dockerfile
    environment:
      KANTINERADO_DB_USER: ${KANTINERADO_DB_USER}
      KANTINERADO_DB_PASSWORD: ${KANTINERADO_DB_PASSWORD}
      KANTINERADO_DB: ${KANTINERADO_DB}
      ADMIN_USER_ID: ${ADMIN_USER_ID}
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    ports:
      - "8080:8080"  
    depends_on:
      mysql:
              condition: service_healthy

  mysql:
    container_name: mysql
    platform: linux/amd64
    image: mysql:latest
    environment:
      MYSQL_DATABASE: ${KANTINERADO_DB}
      MYSQL_USER: ${KANTINERADO_DB_USER}
      MYSQL_PASSWORD: ${KANTINERADO_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${KANTINERADO_DB_ROOT_PASSWORD}
    healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            timeout: 20s
            retries: 10
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    

volumes:
  mysql_data:
