name: Kantinerado

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Start Container with Docker Compose
      env:
        KANTINERADO_DB_ROOT_PASSWORD: ${{ secrets.KANTINERADO_DB_ROOT_PASSWORD }}
        KANTINERADO_DB: ${{ secrets.KANTINERADO_DB }}
        KANTINERADO_DB_USER: ${{ secrets.KANTINERADO_DB_USER }}
        KANTINERADO_DB_PASSWORD: ${{ secrets.KANTINERADO_DB_PASSWORD }}
        ADMIN_USER_ID: ${{ secrets.ADMIN_USER_ID }}
        ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
        ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
        ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
      run: |
        docker-compose up --build -d

    - name: Wait for MySQL to be ready
      run: |
        echo "Waiting for MySQL to be healthy..."
        until [ "`docker inspect -f {{.State.Health.Status}} mysql`" == "healthy" ]; do
          sleep 5;
        done
        echo "MySQL is healthy!"

    - name: Run tests with Gradle
      run: |
        cd springboot-backend
        ./gradlew test --info
      env:
        KANTINERADO_DB: ${{ secrets.KANTINERADO_DB }}
        KANTINERADO_DB_USER: ${{ secrets.KANTINERADO_DB_USER }}
        KANTINERADO_DB_PASSWORD: ${{ secrets.KANTINERADO_DB_PASSWORD }}
        ADMIN_USER_ID: ${{ secrets.ADMIN_USER_ID }}
        ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
        ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
        ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

    - name: Generate test coverage report
      run: |
        cd springboot-backend
        ./gradlew jacocoTestReport

    - name: Upload test report
      uses: actions/upload-artifact@v3
      with:
        name: test-report
        path: springboot-backend/build/reports/tests/test/
