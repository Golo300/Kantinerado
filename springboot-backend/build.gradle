plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
}

group = 'com.app'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'com.itextpdf:itextpdf:5.5.13.3'
	implementation 'org.apache.pdfbox:pdfbox:3.0.0'
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
        xml.required = true  // Wichtiger Schritt, um den Bericht im XML-Format zu erstellen
        html.required = true
        csv.required = false
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            includes = ['com.app.kantinerado.services.*']
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.7
            }
        }
    }
}

test {
    finalizedBy jacocoTestReport
    maxParallelForks = 4
}

check.dependsOn jacocoTestCoverageVerification

task showCoverage(type: Exec, dependsOn: jacocoTestReport) {
    // commandLine 'cmd', '/c', "start ${buildDir}/reports/jacoco/test/html/index.html"
    // FÃ¼r macOS und Linux:
    commandLine 'open', "${buildDir}/reports/jacoco/test/html/index.html"
}

tasks.named('test') {
	useJUnitPlatform()
}
